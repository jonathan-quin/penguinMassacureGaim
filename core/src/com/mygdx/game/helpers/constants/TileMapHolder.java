package com.mygdx.game.helpers.constants;

import com.badlogic.gdx.graphics.Texture;
import com.mygdx.game.helpers.utilities.TileMapInfo;

import java.util.ArrayList;

public class TileMapHolder {


    public static TileMapInfo tempLobby = new TileMapInfo(new Texture("tilemapsAndSets/levels/tempLobby.png"),64,48,16,decompressList( new int[]{0, 201, 1, 43, 0, 21, 1, 43, 0, 21, 1, 43, 0, 21, 1, 3, 0, 37, 1, 3, 0, 21, 1, 3, 0, 37, 1, 3, 0, 21, 1, 3, 0, 37, 1, 3, 0, 21, 1, 3, 0, 37, 1, 3, 0, 21, 1, 3, 0, 37, 1, 3, 0, 20, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 12, 1, 12, 0, 11, 1, 5, 0, 19, 1, 5, 0, 12, 1, 12, 0, 11, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 5, 0, 35, 1, 5, 0, 19, 1, 45, 0, 19, 1, 45, 0, 19, 1, 45, 0, 19, 1, 45, 0, 523}));

    public static TileMapInfo tempLevel1 = new TileMapInfo(new Texture("tilemapsAndSets/levels/tempLevel1.png"),64,48,16,decompressList(new int[]{1, 65, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 8, 1, 2, 0, 52, 1, 2, 0, 4, 1, 6, 0, 52, 1, 2, 0, 4, 1, 6, 0, 52, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 54, 1, 4, 0, 4, 1, 2, 0, 54, 1, 4, 0, 4, 1, 2, 0, 5, 1, 10, 0, 32, 1, 4, 0, 11, 1, 2, 0, 5, 1, 10, 0, 19, 1, 8, 0, 3, 1, 6, 0, 9, 1, 4, 0, 8, 1, 5, 0, 21, 1, 15, 0, 11, 1, 4, 0, 28, 1, 4, 0, 8, 1, 7, 0, 13, 1, 4, 0, 28, 1, 4, 0, 28, 1, 4, 0, 23, 1, 2, 0, 33, 1, 6, 0, 23, 1, 2, 0, 33, 1, 6, 0, 23, 1, 2, 0, 31, 1, 8, 0, 14, 1, 13, 0, 29, 1, 8, 0, 8, 1, 26, 0, 20, 1, 10, 0, 2, 1, 701}));

    public static TileMapInfo tempLevel2 = new TileMapInfo(new Texture("tilemapsAndSets/levels/tempLevel2.png"),64,48,16,decompressList(new int[]{1, 65, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 41, 1, 2, 0, 19, 1, 2, 0, 1, 1, 2, 0, 36, 1, 4, 0, 19, 1, 2, 0, 1, 1, 10, 0, 15, 1, 9, 0, 2, 1, 6, 0, 19, 1, 2, 0, 1, 1, 11, 0, 14, 1, 9, 0, 2, 1, 4, 0, 21, 1, 2, 0, 1, 1, 4, 0, 4, 1, 3, 0, 17, 1, 3, 0, 30, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 17, 1, 3, 0, 42, 1, 2, 0, 17, 1, 3, 0, 2, 1, 3, 0, 37, 1, 2, 0, 18, 1, 2, 0, 1, 1, 4, 0, 37, 1, 2, 0, 18, 1, 6, 0, 11, 1, 8, 0, 19, 1, 2, 0, 18, 1, 5, 0, 12, 1, 8, 0, 19, 1, 2, 0, 3, 1, 6, 0, 32, 1, 5, 0, 2, 1, 4, 0, 10, 1, 2, 0, 3, 1, 9, 0, 29, 1, 5, 0, 2, 1, 4, 0, 10, 1, 2, 0, 7, 1, 7, 0, 48, 1, 2, 0, 10, 1, 4, 0, 48, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 62, 1, 2, 0, 25, 1, 4, 0, 33, 1, 2, 0, 25, 1, 9, 0, 28, 1, 2, 0, 27, 1, 9, 0, 26, 1, 2, 0, 32, 1, 4, 0, 8, 1, 2, 0, 16, 1, 2, 0, 17, 1, 3, 0, 12, 1, 4, 0, 8, 1, 5, 0, 1, 1, 4, 0, 6, 1, 4, 0, 16, 1, 4, 0, 24, 1, 11, 0, 5, 1, 4, 0, 10, 1, 3, 0, 1, 1, 5, 0, 28, 1, 8, 0, 5, 1, 4, 0, 8, 1, 5, 0, 1, 1, 4, 0, 33, 1, 2, 0, 7, 1, 4, 0, 8, 1, 4, 0, 47, 1, 5, 0, 59, 1, 5, 0, 36, 1, 5, 0, 17, 1, 6, 0, 35, 1, 8, 0, 15, 1, 6, 0, 35, 1, 3, 0, 1, 1, 4, 0, 15, 1, 6, 0, 2, 1, 3, 0, 52, 1, 14, 0, 49, 1, 17, 0, 36, 1, 29, 0, 31, 1, 470}));

    public static TileMapInfo biggerTestLevel = new TileMapInfo(new Texture("tilemapsAndSets/tileMapTestWorldBigger.png"),64,48,16,decompressList(new int[]{1, 194, 0, 59, 1, 5, 0, 59, 1, 5, 0, 59, 1, 5, 0, 59, 1, 5, 0, 59, 1, 5, 0, 59, 1, 5, 0, 44, 1, 7, 0, 8, 1, 5, 0, 44, 1, 7, 0, 8, 1, 5, 0, 18, 1, 9, 0, 3, 1, 4, 0, 25, 1, 5, 0, 18, 1, 9, 0, 3, 1, 4, 0, 3, 1, 5, 0, 17, 1, 5, 0, 4, 1, 12, 0, 21, 1, 5, 0, 17, 1, 5, 0, 4, 1, 12, 0, 43, 1, 5, 0, 59, 1, 5, 0, 59, 1, 5, 0, 48, 1, 6, 0, 5, 1, 5, 0, 48, 1, 6, 0, 5, 1, 5, 0, 48, 1, 6, 0, 5, 1, 5, 0, 39, 1, 7, 0, 2, 1, 6, 0, 5, 1, 5, 0, 39, 1, 7, 0, 13, 1, 5, 0, 59, 1, 5, 0, 15, 1, 9, 0, 2, 1, 6, 0, 27, 1, 5, 0, 15, 1, 9, 0, 2, 1, 6, 0, 27, 1, 5, 0, 59, 1, 5, 0, 59, 1, 20, 0, 44, 1, 24, 0, 24, 1, 2, 0, 14, 1, 5, 0, 13, 1, 8, 0, 22, 1, 6, 0, 10, 1, 5, 0, 17, 1, 6, 0, 16, 1, 12, 0, 8, 1, 5, 0, 19, 1, 9, 0, 11, 1, 12, 0, 8, 1, 5, 0, 21, 1, 7, 0, 31, 1, 5, 0, 59, 1, 5, 0, 59, 1, 6, 0, 27, 1, 2, 0, 29, 1, 6, 0, 23, 1, 9, 0, 26, 1, 6, 0, 2, 1, 2, 0, 19, 1, 9, 0, 26, 1, 6, 0, 2, 1, 2, 0, 4, 1, 2, 0, 7, 1, 2, 0, 39, 1, 6, 0, 8, 1, 2, 0, 4, 1, 7, 0, 31, 1, 2, 0, 4, 1, 6, 0, 14, 1, 7, 0, 22, 1, 2, 0, 7, 1, 2, 0, 4, 1, 6, 0, 2, 1, 2, 0, 32, 1, 2, 0, 5, 1, 2, 0, 12, 1, 7, 0, 2, 1, 2, 0, 4, 1, 2, 0, 26, 1, 2, 0, 19, 1, 7, 0, 2, 1, 2, 0, 4, 1, 2, 0, 11, 1, 2, 0, 29, 1, 2, 0, 3, 1, 7, 0, 2, 1, 2, 0, 4, 1, 2, 0, 10, 1, 5, 0, 3, 1, 2, 0, 13, 1, 2, 0, 7, 1, 2, 0, 3, 1, 7, 0, 2, 1, 2, 0, 4, 1, 2, 0, 5, 1, 15, 0, 6, 1, 2, 0, 5, 1, 2, 0, 7, 1, 2, 0, 3, 1, 132}));

    public static TileMapInfo realLevel1 = new TileMapInfo(new Texture("finalTileMapsAndSets/level1.png"),64,12,16,decompressList(new int[]{0, 95, 1, 5, 0, 59, 1, 5, 0, 49, 1, 2, 0, 53, 1, 5, 0, 2, 1, 7, 0, 19, 1, 6, 0, 25, 1, 5, 0, 2, 1, 7, 0, 17, 1, 8, 0, 44, 1, 2, 0, 10, 1, 8, 0, 19, 1, 4, 0, 19, 1, 7, 0, 2, 1, 3, 0, 2, 1, 8, 0, 13, 1, 256}));

    public static TileMapInfo tempLevel3 = new TileMapInfo(new Texture("tilemapsAndSets/levels/tempLevel3.png"),48,64,16,decompressList(new int[]{1, 49, 0, 46, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 4, 1, 4, 0, 38, 1, 2, 0, 4, 1, 9, 0, 33, 1, 2, 0, 6, 1, 7, 0, 33, 1, 2, 0, 7, 1, 3, 0, 36, 1, 2, 0, 46, 1, 2, 0, 13, 1, 2, 0, 31, 1, 2, 0, 13, 1, 3, 0, 6, 1, 4, 0, 20, 1, 2, 0, 13, 1, 13, 0, 20, 1, 2, 0, 14, 1, 10, 0, 22, 1, 2, 0, 46, 1, 2, 0, 29, 1, 2, 0, 15, 1, 2, 0, 29, 1, 3, 0, 1, 1, 3, 0, 10, 1, 2, 0, 29, 1, 11, 0, 6, 1, 2, 0, 30, 1, 11, 0, 5, 1, 2, 0, 38, 1, 3, 0, 5, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 41, 1, 3, 0, 2, 1, 2, 0, 40, 1, 4, 0, 2, 1, 2, 0, 38, 1, 5, 0, 3, 1, 2, 0, 34, 1, 8, 0, 4, 1, 2, 0, 34, 1, 6, 0, 6, 1, 2, 0, 34, 1, 2, 0, 10, 1, 2, 0, 46, 1, 2, 0, 28, 1, 3, 0, 15, 1, 2, 0, 27, 1, 4, 0, 15, 1, 2, 0, 24, 1, 6, 0, 16, 1, 2, 0, 21, 1, 8, 0, 17, 1, 2, 0, 20, 1, 6, 0, 20, 1, 2, 0, 20, 1, 3, 0, 23, 1, 2, 0, 14, 1, 3, 0, 29, 1, 2, 0, 14, 1, 3, 0, 29, 1, 2, 0, 13, 1, 3, 0, 30, 1, 2, 0, 10, 1, 6, 0, 30, 1, 2, 0, 6, 1, 9, 0, 31, 1, 2, 0, 6, 1, 6, 0, 34, 1, 2, 0, 46, 1, 2, 0, 46, 1, 2, 0, 1, 1, 2, 0, 43, 1, 2, 0, 1, 1, 3, 0, 42, 1, 2, 0, 1, 1, 6, 0, 39, 1, 2, 0, 2, 1, 6, 0, 38, 1, 2, 0, 5, 1, 6, 0, 35, 1, 2, 0, 6, 1, 7, 0, 33, 1, 2, 0, 9, 1, 4, 0, 33, 1, 2, 0, 11, 1, 2, 0, 33, 1, 2, 0, 46, 1, 2, 0, 17, 1, 2, 0, 27, 1, 2, 0, 17, 1, 3, 0, 26, 1, 2, 0, 2, 1, 3, 0, 12, 1, 6, 0, 18, 1, 14, 0, 11, 1, 8, 0, 14, 1, 18, 0, 11, 1, 6, 0, 2, 1, 30, 0, 13, 1, 167}));


    private static int[] decompressList(int[] input) {
        ArrayList<Integer> newArray = new ArrayList<>();

        for (int i = 1; i < input.length; i+=2){

            for (int n = 0; n < input[i]; n++){
                newArray.add(input[i-1]);
            }

        }

        int[] returnArr = new int[newArray.size()];

        for (int i = 0; i < returnArr.length; i++){
            returnArr[i] = newArray.get(i);
        }

        return  returnArr;

    }





}
